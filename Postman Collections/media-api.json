{
	"info": {
		"_postman_id": "9d13ae45-a1f3-bca7-ab4b-a982637b014c",
		"name": "Media API",
		"description": "The Media Service is a collection of four services `manager`, `storage`, `resolver`and `modify`.\n\nMedia File ZUID example: `3-19c69dd-07a7a`\n\n## Media Manager Service\n\nIts job is to communicate with the database. The majority of endpoint we used commonly are in this service. This service orchestrates all the media services.\n\n[https://media-manager.api.zesty.io](https://media-manager.api.zesty.io)\n\n## Media Storage Service\n\nIts job is to communicate with the storage provider.\n\n[https://media-storage.api.zesty.io](https://media-storage.api.zesty.io)\n\n## Media Modify Service\n\nIts job is to manipulate images, get commands from manager, and make requests to storage.\n\n[https://media-modify.api.zesty.io](https://media-modify.api.zesty.io)\n\n## Media Resolver Service\n\nIts job it to get a media file ZUID and return the associated CDN path. This service is consumed everywhere we load media. It is the most heavily trafficked service of the 4.\n\n[https://media-resolver.api.zesty.io](https://media-resolver.api.zesty.io)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Manager",
			"item": [
				{
					"name": "Bin",
					"item": [
						{
							"name": "Create Bin",
							"id": "5d7d6d36-cd36-be53-743f-f83dc487bf07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "cdn_prefix",
											"description": "[string] Optional. CDN Prefix",
											"type": "text",
											"value": ""
										},
										{
											"key": "eco_id",
											"value": "",
											"description": "[id] Required if site_id is NOT in post body. Ecosystem ID",
											"type": "text"
										},
										{
											"key": "site_id",
											"value": "",
											"description": "[id] Required if site_id is NOT in post body. Instance ID",
											"type": "text"
										},
										{
											"key": "name",
											"value": "",
											"description": "[string] Required. Name of Bin",
											"type": "text"
										}
									]
								},
								"url": "{{protocol}}://{{media_manager_url}}/bin",
								"description": "Create a bin based on the default storage driver and default cdn in the associated ecosystem or instance.\n\n**Body**: form-data\n\n| **name** | **description** |\n| --- | --- |\n| cdn_prefix | \\[string\\] **Optional.** Unique. Used to specify the prefix of the CDN base URL |\n| eco_id | \\[id\\] **Required** if site_id is NOT in post body. Bin created will be associated to the Ecosystem ID |\n| site_id | \\[id\\] **Required** if eco_id is NOT in post body. Bin created will be associated to the Instance ID |\n| name | \\[string\\] **Required.** Name of bin that will be created |"
							},
							"response": [
								{
									"id": "921f2189-30c9-4bab-8846-24ade71df697",
									"name": "Create Bin in an Ecosystem",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "cdn_prefix",
													"description": "[string] Optional. CDN Prefix",
													"type": "text",
													"value": ""
												},
												{
													"key": "eco_id",
													"value": "{{ecosystem_id}}",
													"description": "[id] Required if site_id is NOT in post body. Ecosystem ID",
													"type": "text"
												},
												{
													"key": "site_id",
													"value": "",
													"description": "[id] Required if site_id is NOT in post body. Instance ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Bin in an Ecosystem",
													"description": "[string] Required. Name of Bin",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/bin"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 13 Mar 2023 04:17:26 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "ETag",
											"value": "W/\"50-D9HGdI9liB7/RhF8GW+pag\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Requires one of: site id, eco id\",\n    \"status\": \"Bad Request\",\n    \"code\": 400\n}"
								},
								{
									"id": "8d9decc0-1d9a-43f8-9a7c-d43a116b1423",
									"name": "Create Bin in an Instance",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "cdn_prefix",
													"description": "[string] Optional. CDN Prefix",
													"type": "text",
													"value": ""
												},
												{
													"key": "eco_id",
													"value": "",
													"description": "[id] Required if site_id is NOT in post body. Ecosystem ID",
													"type": "text"
												},
												{
													"key": "site_id",
													"value": "{{instance_id}}",
													"description": "[id] Required if site_id is NOT in post body. Instance ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Bin in an Instance",
													"description": "[string] Required. Name of Bin",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/bin"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "51be7318-7491-4dc3-90e4-cd377a53f446",
									"name": "Create Bin with CDN Prefix",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "cdn_prefix",
													"description": "[string] Optional. CDN Prefix",
													"type": "text",
													"value": "abc123"
												},
												{
													"key": "eco_id",
													"value": "",
													"description": "[id] Required if site_id is NOT in post body. Ecosystem ID",
													"type": "text"
												},
												{
													"key": "site_id",
													"value": "{{instance_id}}",
													"description": "[id] Required if site_id is NOT in post body. Instance ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "Bin with CDN prefix",
													"description": "[string] Required. Name of Bin",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/bin"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Bin",
							"id": "b75a7a1d-bd49-6912-9458-4877ef72943a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"bin",
										"{{bin_id}}"
									],
									"variable": [
										{
											"value": null,
											"key": "bin_id"
										}
									]
								},
								"description": "Fetch a bin by Bin ID (in ZUID format)."
							},
							"response": [
								{
									"id": "4098909a-64e1-486b-81f7-d8939a61fc2c",
									"name": "Get Bin",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Eco Bins",
							"id": "42bc563e-be9d-4b75-9220-56a4889db15a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/eco/{{ecosystem_id}}/bins",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"eco",
										"{{ecosystem_id}}",
										"bins"
									],
									"variable": [
										{
											"value": "",
											"key": "eco_id"
										}
									]
								},
								"description": "Fetch bins associated with an Ecosystem ID"
							},
							"response": [
								{
									"id": "a460d2ab-a492-4c95-a225-2e520264874e",
									"name": "Get Eco Bins",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{protocol}}://{{media_manager_url}}/eco/{{ecosystem_id}}/bins"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Site Bins",
							"id": "5709d3a3-3dc5-53dc-ba7e-9140fb68ebc2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/site/{{instance_id}}/bins",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"site",
										"{{instance_id}}",
										"bins"
									],
									"variable": [
										{
											"value": "",
											"key": "instance_id"
										}
									]
								},
								"description": "Fetch bins associated with an Instance ID (unique from an Instance ZUID)"
							},
							"response": [
								{
									"id": "578d9639-8555-4a65-8468-dee710cc0284",
									"name": "Get Site Bins",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{protocol}}://{{media_manager_url}}/site/{{instance_id}}/bins"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Bin Files",
							"id": "337b8d94-5605-09fb-578a-8449a35a709d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}/files",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"bin",
										"{{bin_id}}",
										"files"
									],
									"variable": [
										{
											"value": "",
											"key": "bin_id"
										}
									]
								},
								"description": "Fetch Files associated with a Bin ID"
							},
							"response": [
								{
									"id": "e47431c5-36c7-4450-bfac-224e621e7ee2",
									"name": "Get Bin Files",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}/files"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Bin Groups",
							"id": "e9bc7028-d063-b48b-fa44-a50daaf4a70e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}/groups",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"bin",
										"{{bin_id}}",
										"groups"
									],
									"variable": [
										{
											"value": "",
											"key": "bin_id"
										}
									]
								},
								"description": "Fetch Groups associated with a Bin ID"
							},
							"response": [
								{
									"id": "6fbf554d-7a71-40eb-8878-b975ae9ca3a7",
									"name": "Get Bin Groups",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}/groups"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Update Bin",
							"id": "7bd68b78-8532-e4cb-a59b-efa24d84ce72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "",
											"description": "[string] Required. Name of Bin",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"bin",
										"{{bin_id}}"
									],
									"variable": [
										{
											"value": null,
											"key": "bin_id"
										}
									]
								},
								"description": "Update name of bin\n\n**Body**: form-data\n\n| **name** | **description** |\n| --- | --- |\n| name | \\[string\\] **Required**. New name of bin |"
							},
							"response": [
								{
									"id": "37d3baec-6a15-4a40-9227-95f776a2d72a",
									"name": "Update Bin",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "New Bin Name",
													"description": "[string] Required. Name of Bin",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Delete Bin",
							"id": "449b3da4-69b4-f853-f9d0-31a620859cf6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"bin",
										"{{bin_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "bin_id"
										}
									]
								},
								"description": "Delete a bin"
							},
							"response": [
								{
									"id": "44ceb5a6-ee32-4b5b-ad21-58056b701817",
									"name": "Delete Bin",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{protocol}}://{{media_manager_url}}/bin/{{bin_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "f6023a91-531a-87cb-c267-64a18d375dc8",
					"description": "Bin is a storage for files and groups used to organize an instance or an ecosystem's media files.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ab02bd93-050a-43f5-a63c-988729a696e4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bb2e610b-81f8-4192-823f-197097effaa0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Group",
					"item": [
						{
							"name": "Create Group",
							"id": "e2600abe-a4b3-3dc4-5fe1-f48d7559a559",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "bin_id",
											"value": "",
											"description": "[id] Required. Bin ID",
											"type": "text"
										},
										{
											"key": "group_id",
											"value": "",
											"description": "[id] Optional. Group ID",
											"type": "text"
										},
										{
											"key": "name",
											"value": "",
											"description": "[string] Optional. Name of Group",
											"type": "text"
										}
									]
								},
								"url": "{{protocol}}://{{media_manager_url}}/group",
								"description": "Create a group, nested under another group or at the top level (bin level).\n\n**Body:** form-data\n\n| **name** | **description** |\n| --- | --- |\n| bin_id | \\[id\\] **Required**. Bin ID where the Group will be associated with |\n| group_id | \\[id\\] **Optional**. The group that will be created will have this group_id as its parent, otherwise parent will be bin_id |\n| name | \\[string\\] **Optional**. If no value, the folder is named 'new folder' by default |"
							},
							"response": [
								{
									"id": "df068fad-c7e7-4922-82ab-231a03d6f90c",
									"name": "Create Group in a Bin",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "",
													"description": "[string] Optional. Name of Group",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/group"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "efd033f5-5fb3-495d-a2aa-85ab69b9e62d",
									"name": "Create Group within a Group",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "{{group_id}}",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "",
													"description": "[string] Optional. Name of Group",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/group"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "ef596cbe-89cd-4672-9d9c-c0697987c3c7",
									"name": "Create Group with Name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "name",
													"value": "My Bucket",
													"description": "[string] Optional. Name of Group",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/group"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get Group",
							"id": "c2668203-f55d-4f0a-a01e-10fd7191e70f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"group",
										"{{group_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "group_id"
										}
									]
								},
								"description": "Fetch a group by Group ID (in ZUID format)."
							},
							"response": [
								{
									"id": "57d707ae-e7cd-41cc-81fb-72d56bc45308",
									"name": "Get Group",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Update Group",
							"id": "2dd8892b-3101-af64-49c2-34f3979c39d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "",
											"description": "new name of the folder",
											"type": "text"
										},
										{
											"key": "group_id",
											"value": "",
											"description": "group_id of the parent group",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"group",
										"{{group_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "group_id"
										}
									]
								},
								"description": "Update group name and parent group.\n\n**Body:** form-data\n\n| **name** | **description** |\n| --- | --- |\n| name | \\[string\\] **Required**. New name of the group |\n| group_id | \\[id\\] **Required**. The group_id of the parent group. This can be the current group_id value of the group record |"
							},
							"response": [
								{
									"id": "f4517e4b-c1c6-4424-995a-8ad4fafabf7b",
									"name": "Update Group",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "name",
													"value": "New Group Name",
													"description": "new name of the folder",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "{{group_id}}",
													"description": "group_id of the parent group",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Delete Group",
							"id": "a25f2562-1c3d-9600-3301-21a6666ca526",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"group",
										"{{group_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "group_id"
										}
									]
								},
								"description": "Delete a group"
							},
							"response": [
								{
									"id": "fa243988-8d3f-43e8-a0db-f24c1f830dbd",
									"name": "Delete Group",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{protocol}}://{{media_manager_url}}/group/{{group_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "f8ca9f18-b49f-14af-7b59-2cf09a8224cf",
					"description": "Groups are virtual tags that group together files. This is used to organize the frontend to create a file system experience.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "22193a3f-4b57-43d7-8afa-ee49e6cb5f40",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bee1e474-ec44-4c02-994f-c682156a07ce",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File",
					"item": [
						{
							"name": "Create File",
							"id": "101761f2-2950-25ff-4211-957ca5d918b0",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "bin_id",
											"value": "",
											"description": "[id] Required. Bin ID",
											"type": "text"
										},
										{
											"key": "group_id",
											"value": "",
											"description": "[id] Optional. Group ID",
											"type": "text"
										},
										{
											"key": "filename",
											"value": "",
											"description": "[string] Required. Filename",
											"type": "text"
										},
										{
											"key": "createdBy",
											"value": "",
											"description": "[string] Optional. Legacy User",
											"type": "text"
										},
										{
											"key": "cdnUrl",
											"value": "",
											"description": "[string] Optional. CDN URL",
											"type": "text"
										},
										{
											"key": "title",
											"value": "",
											"description": "[string] Optional. Title/label of the file",
											"type": "text"
										}
									]
								},
								"url": "{{protocol}}://{{media_manager_url}}/file",
								"description": "Create a file\n\n**Body**: form-data\n\n| **name** | **description** |\n| --- | --- |\n| bin_id | \\[id\\] Required. Bin ID |\n| group_id | \\[id\\] Optional. Group ID |\n| filename | \\[string\\] Required. Filename |\n| createdBy | \\[string\\] Optional. Legacy User ZUID (optional) legacy id of the user. |\n| cdnUrl | \\[string\\] Optional. CDN URL. If not passed, the CDN base URL of the bin will be used. |\n| title | \\[string\\] Optional. Title/label of the file |"
							},
							"response": [
								{
									"id": "e3088df8-38ec-4563-b624-1bd89399a5ec",
									"name": "Create File in a Bin",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "filenametest.json",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "createdBy",
													"value": "",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "",
													"description": "[string] Optional. CDN URL",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title/label of the file",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "4bb10afc-a889-43a9-a438-e7d1d7c4f31a",
									"name": "Create File in a Group",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "{{group_id}}",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "filenametest2.json",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "createdBy",
													"value": "",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "",
													"description": "[string] Optional. CDN URL",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title/label of the file",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "1581d9d8-b70f-4d56-9b8b-e08db6db83b0",
									"name": "Create File with createdBy",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "filenametest3.json",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "createdBy",
													"value": "Matthew",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "",
													"description": "[string] Optional. CDN URL",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title/label of the file",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "9aa2911d-38a5-4f63-bd06-9bd6f0ef7eee",
									"name": "Create File with CDN URL",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "filenametest4.json",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "createdBy",
													"value": "",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "https://testcdn.media.zestyio.com",
													"description": "[string] Optional. CDN URL",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title/label of the file",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "de4d6db4-8846-409b-8830-717f618cbb57",
									"name": "Create File with Title",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[id] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "filenametest5.json",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "createdBy",
													"value": "",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "",
													"description": "[string] Optional. CDN URL",
													"type": "text"
												},
												{
													"key": "title",
													"value": "Test Title",
													"description": "[string] Optional. Title/label of the file",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Get File",
							"id": "f400371f-8e10-14a2-4bec-11e40427e9e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"file",
										"{{file_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "file_id"
										}
									]
								},
								"description": "Fetch a file by File ID (in ZUID format)."
							},
							"response": [
								{
									"id": "a32c9486-77a5-4962-aeca-912a233fbeb1",
									"name": "Get File",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Update File",
							"id": "3f4912ac-9559-35e2-d467-904d13960966",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "filename",
											"value": "",
											"description": "[string] Optional. Filename",
											"type": "text"
										},
										{
											"key": "group_id",
											"value": "",
											"description": "[string] Optional. Group ID",
											"type": "text"
										},
										{
											"key": "title",
											"value": "",
											"description": "[string] Optional. Title",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"file",
										"{{file_id}}"
									],
									"variable": [
										{
											"value": "3-f6a3a42-286j85",
											"key": "file_id"
										}
									]
								},
								"description": "Update file name and and optionally update parent group or title\n\n**Body**: form-data\n\n| **name** | **description** |\n| --- | --- |\n| filename | \\[string\\] Optional. New Filename |\n| group_id | \\[string\\] Optional. New Parent Group |\n| title | \\[string\\] Optional. New Title |"
							},
							"response": [
								{
									"id": "ca71263a-7492-4343-bc17-52fe40cc90dd",
									"name": "Update File Filename",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "filename",
													"value": "newfilename.png",
													"description": "[string] Optional. Filename",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[string] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "b38c906c-41e2-43e1-bb5a-c0a158a2c81e",
									"name": "Update File Group ID",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "filename",
													"value": "",
													"description": "[string] Optional. Filename",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "{{group_id}}",
													"description": "[string] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "title",
													"value": "",
													"description": "[string] Optional. Title",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "a04d8b6e-c01e-4388-9b84-a7e2ea6ef492",
									"name": "Update File Title",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "filename",
													"value": "",
													"description": "[string] Optional. Filename",
													"type": "text"
												},
												{
													"key": "group_id",
													"value": "",
													"description": "[string] Optional. Group ID",
													"type": "text"
												},
												{
													"key": "title",
													"value": "New Title",
													"description": "[string] Optional. Title",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Delete File",
							"id": "d15396c1-6083-e2c3-60f8-5335f5cca14b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"file",
										"{{file_id}}"
									],
									"variable": [
										{
											"value": "",
											"key": "file_id"
										}
									]
								},
								"description": "Delete a File"
							},
							"response": [
								{
									"id": "38e3a112-a604-44bf-8bec-72f56c256eaf",
									"name": "Delete File",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "0f67d7d5-e29f-26fe-2888-bccc89f18dea",
					"description": "Files are media items that can be stored in a group or in a bin."
				},
				{
					"name": "File Modification",
					"item": [
						{
							"name": "Get Modified File",
							"id": "2e48aa2b-cc89-f56f-e867-659e27f1384c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}/modified/:actionHash",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_manager_url}}"
									],
									"path": [
										"file",
										"{{file_id}}",
										"modified",
										":actionHash"
									],
									"variable": [
										{
											"key": "actionHash",
											"value": "",
											"description": "[id] Required. Action Hash"
										}
									]
								},
								"description": "Fetch a Modified File using the File ID and Action Hash (unique identifier associated with a file modification action)"
							},
							"response": [
								{
									"id": "93723291-1813-40eb-b3ff-43bf1bc5bb10",
									"name": "Get Modified File",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{protocol}}://{{media_manager_url}}/file/{{file_id}}/modified/:actionHash",
											"protocol": "{{protocol}}",
											"host": [
												"{{media_manager_url}}"
											],
											"path": [
												"file",
												"{{file_id}}",
												"modified",
												":actionHash"
											],
											"variable": [
												{
													"key": "actionHash",
													"value": "1fc97b3c326478bf6afcb60e52679656",
													"description": "[id] Required. Action Hash"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						},
						{
							"name": "Create Modified File",
							"id": "70518576-7acd-be35-53cf-ef2a066ab031",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file_id",
											"value": "",
											"description": "[id] Required. File ID",
											"type": "text"
										},
										{
											"key": "filename",
											"value": "",
											"description": "[string] Required. Filename",
											"type": "text"
										},
										{
											"key": "bin_id",
											"value": "",
											"description": "[id] Required. Bin ID",
											"type": "text"
										},
										{
											"key": "cdnUrl",
											"value": "",
											"description": "[string] Required if storageUrl is NOT in post body. CDN URL",
											"type": "text"
										},
										{
											"key": "storageUrl",
											"value": "",
											"description": "[string] Required if cdnUrl is NOT in post body. Storage URL",
											"type": "text"
										},
										{
											"key": "actions_hash",
											"value": "",
											"description": "[string] Optional. Hash of actions to be sent to modify service.",
											"type": "text"
										},
										{
											"key": "created_by",
											"value": "",
											"description": "[string] Optional. Legacy User",
											"type": "text"
										}
									]
								},
								"url": "{{protocol}}://{{media_manager_url}}/file/modified",
								"description": "Created a Modified File.\n\n**Body**: form-data\n\n| **name** | **description** |\n| --- | --- |\n| file_id | \\[id\\] **Required**. File ID |\n| filename | \\[string\\] **Required**. Filename |\n| bin_id | \\[id\\] **Required**. Bin ID |\n| cdnUrl | \\[string\\] **Required** if storageUrl is NOT in post body. CDN URL |\n| storageUrl | \\[string\\] **Required** if cdnUrl is NOT in post body. Storage URL |\n| actions_hash | \\[string\\] **Optional**. Hash of actions to be sent to modify service. |\n| created_by | \\[string\\] **Optional**. Legacy User |"
							},
							"response": [
								{
									"id": "e757fa61-dcf0-4bec-b2f9-c010f677556e",
									"name": "Create Modified File",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file_id",
													"value": "{{file_id}}",
													"description": "[id] Required. File ID",
													"type": "text"
												},
												{
													"key": "filename",
													"value": "testimage.png",
													"description": "[string] Required. Filename",
													"type": "text"
												},
												{
													"key": "bin_id",
													"value": "{{bin_id}}",
													"description": "[id] Required. Bin ID",
													"type": "text"
												},
												{
													"key": "cdnUrl",
													"value": "",
													"description": "[string] Required if storageUrl is NOT in post body. CDN URL",
													"type": "text"
												},
												{
													"key": "storageUrl",
													"value": "https://storage.googleapis.com/zesty-d7ff27a82fde49ce1c308f32e2b0606ee08db9c5",
													"description": "[string] Required if cdnUrl is NOT in post body. Storage URL",
													"type": "text"
												},
												{
													"key": "actions_hash",
													"value": "",
													"description": "[string] Optional. Hash of actions to be sent to modify service.",
													"type": "text"
												},
												{
													"key": "created_by",
													"value": "",
													"description": "[string] Optional. Legacy User",
													"type": "text"
												}
											]
										},
										"url": "{{protocol}}://{{media_manager_url}}/file/modified"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								}
							]
						}
					],
					"id": "fb499549-9f20-11a9-8752-7440b9db9719"
				}
			],
			"id": "358da090-1875-cf66-1424-cb8e4e69462b",
			"description": "## Media Manager Service\n\nIts job is to communicate with the database. The majority of endpoint we used commonly are in this service. This service orchestrates all the media services.\n\n[https://media-manager.api.zesty.io](https://media-manager.api.zesty.io/)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "faaf533f-0331-4606-ada8-813ce4a00ccd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "17efff70-da3e-4966-a029-f20bcbdbf0c5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Storage",
			"item": [
				{
					"name": "Bucket Creation",
					"id": "e394c3af-1fdc-5f70-7501-4ffded16dd9b",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Auth-Content",
								"value": "{{X-Service-Auth-Content}}"
							},
							{
								"key": "X-Service-Auth-Sig",
								"value": "{{X-Service-Auth-Sig}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_driver\": \"\",\n    \"storage_name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_storage_url}}/bucket",
						"description": "Create a bucket.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n**Body:** raw JSON\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Required**. Storage Provider. accepted value is `gcp` |"
					},
					"response": [
						{
							"id": "7f8c8ac0-5652-4f04-a90a-54d1a5546012",
							"name": "Bucket Creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"testbucketname\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_storage_url}}/bucket"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "File Creation",
					"id": "ad7e82e3-e314-6b4e-3fbf-5c48ff5a2181",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "storage_driver",
									"value": "",
									"description": "[string] Optional. Storage Provider. gcp or rackspace",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{media_storage_url}}/upload/:provider/:bucket_name",
							"protocol": "{{protocol}}",
							"host": [
								"{{media_storage_url}}"
							],
							"path": [
								"upload",
								":provider",
								":bucket_name"
							],
							"variable": [
								{
									"key": "provider",
									"value": "",
									"description": "[string] Required. Storage Provider (gcp or rackspace)"
								},
								{
									"key": "bucket_name",
									"value": "",
									"description": "[string] Required. Name of bucket"
								}
							]
						},
						"description": "Create a file.\n\nIn the URI:  \n`bucketName` is accessed by media manager service /sites/site_id/bins  \n`provider` is the driver name (gcp or rackspace)\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Optional**. Storage Provider. accepted value is `gcp` |"
					},
					"response": [
						{
							"id": "e615b1b1-34e5-4258-8dbf-7fd34bc7f351",
							"name": "File Creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "storage_driver",
											"value": "",
											"description": "[string] Optional. Storage Provider. gcp or rackspace",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{protocol}}://{{media_storage_url}}/upload/:provider/:bucket_name",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_storage_url}}"
									],
									"path": [
										"upload",
										":provider",
										":bucket_name"
									],
									"variable": [
										{
											"key": "provider",
											"value": "gcp",
											"description": "[string] Required. Storage Provider (gcp or rackspace)"
										},
										{
											"key": "bucket_name",
											"value": "zesty-abc92fd616e87d098f39103b56d39cfc859fdd60",
											"description": "[string] Required. Name of bucket"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "File Copy",
					"id": "860a0a99-50ae-5e53-bce1-4a124f0b0d40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storageProvider\": \"\",\n    \"bucketName\": \"\",\n    \"filenamesUrls\": {\n        {{file_id}}: [\"fileName\", \"sourceUrl\"]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_storage_url}}/file/copy",
						"description": "Copy a file from a remote URL into the storage bucket.  \nThis is admittedly not as simple as it should be because I've added in allowing some copies to fail while others succeed as part of the same request.\n\n**Body**: raw JSON\n\n``` json\n{\n    \"storageProvider\": \"\",\n    \"bucketName\": \"\",\n    \"filenamesUrls\": {\n        {{file_id}}: [\"fileName\", \"sourceUrl\"]\n    }\n}\n\n```\n\n| **name** | **description** |\n| --- | --- |\n| storageProvider | \\[string\\] **Required**. Storage Provider. accepted value is `gcp` |\n| bucketName | \\[string\\] **Required**. Name of storage bucket pulled off the media manager /bins endpoint |\n| filenamesUrls | \\[object\\] Required. Filename and Source URL in this format: `{file_id: [fileName, sourceUrl]}` |"
					},
					"response": [
						{
							"id": "44b6c137-d2cc-414f-8c75-bb6c3233ed41",
							"name": "File Copy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storageProvider\": \"gcp\",\n    \"bucketName\": \"zesty-edeb51df69b7794951daafdc077621173699dbf2\",\n    \"filenamesUrls\": {\n        {{file_id}}: [\"testimage.png\", \"https://storage.googleapis.com/zesty-d7ff27a82fde49ce1c308f32e2b0606ee08db9c5/testimage.png\"]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_storage_url}}/file/copy"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Health Endpoint",
					"id": "41c8daf8-5195-f1a0-aef0-e27c9681ed6f",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{protocol}}://{{media_storage_url}}/",
						"description": "Check Health of Media Storage Service"
					},
					"response": []
				},
				{
					"name": "File Update",
					"id": "74fc65f1-6963-90c9-190b-c3f6eb6856f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"storage_name\",\n    \"prev_name\": \"prev_name\",\n    \"next_name\": \"next_name\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_storage_url}}/file",
						"description": "Update name of file.\n\n**Body**: raw JSON\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Required**. Storage Provider. accepted value is`gcp` |\n| storage_name | \\[string\\] **Required**. Name of Storage Bucket (from media bins) |\n| prev_name | \\[string\\] **Required**. Previous name of file |\n| next_name | \\[string\\] **Required**. New name of file |"
					},
					"response": [
						{
							"id": "8dc5a156-51ce-4e34-8037-09dcc08a1229",
							"name": "File Update",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"zesty-a70d78eb1b2356e28e464bf46f9639a593bd0f16\",\n    \"prev_name\": \"newfilename.png\",\n    \"next_name\": \"testnewfilename.png\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_storage_url}}/file"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Bucket Deletion",
					"id": "25c328e4-8f5d-d056-e003-c456da0ccda6",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Service-Auth-Content",
								"value": "{{X-Service-Auth-Content}}"
							},
							{
								"key": "X-Service-Auth-Sig",
								"value": "{{X-Service-Auth-Sig}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_driver\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{media_storage_url}}/bucket/:bucket_name",
							"protocol": "{{protocol}}",
							"host": [
								"{{media_storage_url}}"
							],
							"path": [
								"bucket",
								":bucket_name"
							],
							"variable": [
								{
									"key": "bucket_name",
									"value": null,
									"description": "[string] Required. Name of bucket"
								}
							]
						},
						"description": "Delete a bucket and all of the files it contains.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n**Body**: raw JSON\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Required**. Storage Provider. accepted value is `gcp` |"
					},
					"response": [
						{
							"id": "cc37895f-fcbf-4606-9457-b9f5f6a6fb43",
							"name": "Bucket Deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storage_driver\": \"rackspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{media_storage_url}}/bucket/:bucket_name",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_storage_url}}"
									],
									"path": [
										"bucket",
										":bucket_name"
									],
									"variable": [
										{
											"key": "bucket_name",
											"value": "zesty-edeb51df69b7794951daafdc077621173699dbf2",
											"description": "[string] Required. Name of bucket"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "File Delete",
					"id": "760baf8c-6ed5-58dd-daf0-4e06b6a19700",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"storage_name\",\n    \"filename\": \"filename\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_storage_url}}/file",
						"description": "Delete a file\n\n**Body:** raw JSON\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Required**. Storage Provider. accepted value is `gcp` |\n| storage_name | \\[string\\] **Required**. Name of Storage Bucket (from media bins) |\n| filename | \\[string\\] **Required**. Name of file to be deleted |"
					},
					"response": [
						{
							"id": "70c669e1-60b2-49db-826d-78e229fc04b3",
							"name": "File Delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"zesty-abc92fd616e87d098f39103b56d39cfc859fdd60\",\n    \"filename\": \"Qwinix1..jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_storage_url}}/file"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Batch Files Delete",
					"id": "34f7cce0-e105-d363-bde9-18486d40195d",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"storage_name\",\n    \"filenames\": [\"filename1\", \"filenames2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_storage_url}}/files",
						"description": "Deletes multiple files at once\n\n**Body:** raw JSON\n\n| **name** | **description** |\n| --- | --- |\n| storage_driver | \\[string\\] **Required**. Storage Provider. accepted value is `gcp` |\n| storage_name | \\[string\\] **Required**. Name of Storage Bucket (from media bins) |\n| filenames | \\[array\\] **Required**. Name of files to be deleted, comma-separated |"
					},
					"response": [
						{
							"id": "1df37bc4-7b84-4be3-a32d-14a4dffc781a",
							"name": "Batch Files Delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"storage_driver\": \"gcp\",\n    \"storage_name\": \"zesty-abc92fd616e87d098f39103b56d39cfc859fdd60\",\n    \"filenames\": [\"kanye-west-kissing-himself.jpg, newfilename.png\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_storage_url}}/files"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				}
			],
			"id": "583ca7c5-0362-3f0c-20e6-be86c30ec31a",
			"description": "## Media Storage Service\n\nIts job is to communicate with the storage provider.\n\n[https://media-storage.api.zesty.io](https://media-storage.api.zesty.io/)"
		},
		{
			"name": "Modify",
			"item": [
				{
					"name": "Modify",
					"id": "6b883185-bfbe-43b4-9c1c-5272ca5990ee",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Auth-Content",
								"value": "{{X-Service-Auth-Content}}"
							},
							{
								"key": "X-Service-Auth-Sig",
								"value": "{{X-Service-Auth-Sig}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zuid\": {{file_id}},\n    \"actions_hash\": \"\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"crop\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_modify_url}}/modify",
						"description": "Modify an image based on passed action/s.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n**Body**: raw JSON\n\nExample:\n\n``` json\n{\n    \"zuid\": {{file_id}},\n    \"actions_hash\": \"\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"crop\",\n        \"width\": \"100\",\n        \"height\": \"100\"\n    }\n}\n\n```\n\n| **name** | **description** |\n| --- | --- |\n| zuid | \\[id\\] **Required**. File ID in ZUID Format. |\n| actions | \\[JSON\\] **Required**. Modify action details that will be done on the file. Accepts one or more value. |\n| actions.type | \\[string\\] **Required**. Values accepted are `resize`, `blackandwhite`, `thumbnail`, `optimize`, `orient`, `crop`, and `fit` |"
					},
					"response": [
						{
							"id": "6a2be57b-ba69-4881-a239-1bfe95d781a6",
							"name": "Crop",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": {{file_id}},\n    \"actions_hash\": \"3432\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"crop\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "f5b018ca-a7ad-4df5-ae91-68f6f603ff23",
							"name": "Fit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"3432\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"fit\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "560da40e-c533-4df8-b698-54a94efef087",
							"name": "Resize",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"3432\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"resize\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "09d2a98e-9320-4d63-a273-001829de2f75",
							"name": "Black and White",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"54365\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"blackandwhite\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "b785a55d-6f21-4c81-a8bb-6bc0e28d0b88",
							"name": "Thumbnail",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"54365\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"thumbnail\",\n        \"width\": \"200\",\n        \"height\": \"200\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "eff4d758-db1d-4408-a1bc-0899252548be",
							"name": "Optimize",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"3432\",\n    \"file_name\": \"\",\n    \"actions\": [\n        {\n            \"type\": \"optimize\",\n            \"quality\": \"100\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "c054e0f7-35df-4e80-a017-34fb33157e80",
							"name": "Orient",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"zuid\": \"3-f7e06c1-4z4xbm\",\n    \"actions_hash\": \"54365\",\n    \"file_name\": \"\",\n    \"actions\": {\n        \"type\": \"orient\",\n        \"direction\": \"portrait\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_modify_url}}/modify"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				}
			],
			"id": "b5a5de73-e174-ec19-9893-2e3dba24b769",
			"description": "## Media Modify Service\n\nIts job is to manipulate images, get commands from manager, and make requests to storage.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n[https://media-modify.api.zesty.io](https://media-modify.api.zesty.io)",
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "Resolver",
			"item": [
				{
					"name": "Resolve File",
					"id": "813165b7-fbf9-47e5-8e54-724915027a81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Auth-Content",
								"value": "{{X-Service-Auth-Content}}"
							},
							{
								"key": "X-Service-Auth-Sig",
								"value": "{{X-Service-Auth-Sig}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"items\": [\n\t\t\t\t{\t\n\t\t\t\t\t\"id\": {{file_id}},\n        \t\t\t\"actions\" : [\n\t\t\t            {\n\t\t\t                \"type\": \"getimage\",\n\t\t\t                \"options\": {\n\t\t\t                \t\"width\" : 300,\n\t\t\t                \t\"height\" : 300,\n\t\t\t                \t\"type\" : \"crop\"\n\t\t\t                }\n\t\t\t            }\n\t\t\t        ],\n        \t\t\t\"property\" : \"url\"\n\t\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_resolver_url}}/resolve",
						"description": "Execute and save modifications done on a file. Response will contain the public URL of the file with the the applied modifications on the file.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n**Format**: raw JSON\n\n``` json\n{\n    \"items\": [\n                {    \n                    \"id\": {{file_id}},\n                    \"actions\" : [\n                        {\n                            \"type\": \"getimage\",\n                            \"options\": {\n                                \"width\" : 300,\n                                \"height\" : 300,\n                                \"type\" : \"crop\"\n                            }\n                        }\n                    ],\n                    \"property\" : \"url\"\n                }\n        ]\n}\n\n```\n\n**Body:**\n\n| **name** | **description** | **child description** |\n| --- | --- | --- |\n| id | \\[id\\] **Required**. File ID in ZUID Format. |  |\n| actions | \\[json\\] **Required**. Actions done on the File. | \\[string\\] **Required**. action |\n| property | \\[string\\] **Required.** File URL |  |\n|  |  |  |"
					},
					"response": [
						{
							"id": "f45299c7-419d-4dd5-b027-eff510b56ec4",
							"name": "Resolve Cropped File",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"items\": [\n\t\t\t\t{\t\n\t\t\t\t\t\"id\": \"3-f7e06c1-4z4xbm\",\n        \t\t\t\"actions\" : [\n\t\t\t            {\n\t\t\t                \"type\": \"getimage\",\n\t\t\t                \"options\": {\n\t\t\t                \t\"width\" : 300,\n\t\t\t                \t\"height\" : 300,\n\t\t\t                \t\"type\" : \"crop\"\n\t\t\t                }\n\t\t\t            }\n\t\t\t        ],\n        \t\t\t\"property\" : \"url\"\n\t\t\t\t}\n\t\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_resolver_url}}/resolve"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Invalidate",
					"id": "ee287b91-7baa-4d26-923d-db1398d7d57d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Service-Auth-Content",
								"value": "{{X-Service-Auth-Content}}"
							},
							{
								"key": "X-Service-Auth-Sig",
								"value": "{{X-Service-Auth-Sig}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[[\"{{file_id}}\",\"url\",\"*\"]]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{protocol}}://{{media_resolver_url}}/invalidate",
						"description": "Bust the file URL from CDN to invalidate the public URL of the modified file.\n\nThis API only allows Service to Service consumption. A zesty user cannot use this API.\n\n`X-Service-Auth-Content` and `X-Service-Auth-Sig` custom headers are used to consume this API via Service to Service token.\n\n**Format**: tuple\n\n`[[zuid, type [, actionsHash]], [..], ..]`\n\n- if actionsHash is the string `\\*` , it is treated as a wildcard and all actions hashes are deleted for the given zuid and type. Keys without a actionsHash are not deleted.\n- if actionsHash is `null`, `undefined`, or an `empty` string, a key without the actionsHash will be deleted so So if user wants to delete a zuid/type pair and all possible subkeys, user would submit two tuples like so: `[[zuid, type], [zuid, type, '\\*']]`\n    \n\n**Body:**\n\n| **name** | **description** |\n| --- | --- |\n| file_zuid | \\[id\\] **Required**. File ID in ZUID Format. |\n| URL | \\[string\\] **Required**. URL |\n| actionHash | \\[string\\] **Required**. Action Hash. value can be \\* or specific action hash |"
					},
					"response": [
						{
							"id": "d0feaff9-dc55-4032-a7c5-d964906e4997",
							"name": "Invalidate",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Service-Auth-Content",
										"value": "{{X-Service-Auth-Content}}"
									},
									{
										"key": "X-Service-Auth-Sig",
										"value": "{{X-Service-Auth-Sig}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[[\"3-f7e06c1-4z4xbm\",\"url\",\"https://3hbvtcxl.media.zestyio.com/testimage.6606a5c610c95af91fa2be7718343f73.png\"]]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{protocol}}://{{media_resolver_url}}/invalidate"
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				},
				{
					"name": "Resolve File Dynamically",
					"id": "49e32944-7d24-44a5-962c-b65bb600dcb9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{APP_SID}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{protocol}}://{{media_resolver_url}}/resolve/{{file_id}}/getimage",
						"description": "Returns the modified version of the image without affecting the original image.\n\n**Params:**\n\n| **name** | **description** |\n| --- | --- |\n| type | \\[string\\] **Required.** Action Type. values can be `fit`and `crop`. |\n| options | \\[string\\] **Optional.** width, height for the type |"
					},
					"response": [
						{
							"id": "e06694b0-bd5f-4b50-aa82-c7806451e061",
							"name": "Crop File",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_resolver_url}}/resolve/{{file_id}}/getimage?w=100&h=100&type=crop",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_resolver_url}}"
									],
									"path": [
										"resolve",
										"{{file_id}}",
										"getimage"
									],
									"query": [
										{
											"key": "w",
											"value": "100"
										},
										{
											"key": "h",
											"value": "100"
										},
										{
											"key": "type",
											"value": "crop"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						},
						{
							"id": "c8846ae2-1b18-4337-8bd0-5640e2f31248",
							"name": "Fit File",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{media_resolver_url}}/resolve/{{file_id}}/getimage?w=100&h=100&type=fit",
									"protocol": "{{protocol}}",
									"host": [
										"{{media_resolver_url}}"
									],
									"path": [
										"resolve",
										"{{file_id}}",
										"getimage"
									],
									"query": [
										{
											"key": "w",
											"value": "100"
										},
										{
											"key": "h",
											"value": "100"
										},
										{
											"key": "type",
											"value": "fit"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"responseTime": null,
							"body": null
						}
					]
				}
			],
			"id": "ff083543-d708-cb05-90eb-e0a0f5fefa47"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3d2e9944-3c5e-4a1f-9a54-278335f31cbf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c61a4903-e58b-4f14-b9e3-302d2704d1bf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}